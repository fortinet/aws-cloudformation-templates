{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "(v2.1) AWS CFT to deploy a VPC with 4 subnets (Public, Private, HAsync, and HAmgmt) across 2x Availability Zones.",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [
				{
					"Label": {
						"default": "VPC Configuration"
					},
					"Parameters": [
						"VPCCIDR",
						"AZForSubnet1",
						"AZForSubnet2",
						"PublicSubnet1",
						"PrivateSubnet1",
						"HASyncSubnet1",
						"HAMgmtSubnet1",
						"PublicSubnet2",
						"PrivateSubnet2",
						"HASyncSubnet2",
						"HAMgmtSubnet2",
						"TgwAttachSubnets",
						"TgwAttachSubnet1",
						"TgwAttachSubnet2"
					]
				}
			]
		}
	},
	"Parameters": {
		"VPCCIDR": {
			"Type": "String",
			"Default": "10.0.0.0/16",
			"Description": "Provide a network CIDR for the VPC"
		},
		"AZForSubnet1": {
			"Type": "AWS::EC2::AvailabilityZone::Name",
			"Description": "Select an Availability Zone for the first set of subnets"
		},
		"AZForSubnet2": {
			"Type": "AWS::EC2::AvailabilityZone::Name",
			"Description": "Select an Availability Zone for the second set of subnets"
		},
		"PublicSubnet1": {
			"Type": "String",
			"Default": "10.0.1.0/24",
			"Description": "Provide a network CIDR for PublicSubnet1"
		},
		"PrivateSubnet1": {
			"Type": "String",
			"Default": "10.0.2.0/24",
			"Description": "Provide a network CIDR for PrivateSubnet1"
		},
		"HASyncSubnet1": {
			"Type": "String",
			"Default": "10.0.3.0/24",
			"Description": "Provide a network CIDR for HASyncSubnet1"
		},
		"HAMgmtSubnet1": {
			"Type": "String",
			"Default": "10.0.4.0/24",
			"Description": "Provide a network CIDR for HAMgmtSubnet1"
		},
		"PublicSubnet2": {
			"Type": "String",
			"Default": "10.0.10.0/24",
			"Description": "Provide a network CIDR for PublicSubnet2"
		},
		"PrivateSubnet2": {
			"Type": "String",
			"Default": "10.0.20.0/24",
			"Description": "Provide a network CIDR for PrivateSubnet2"
		},
		"HASyncSubnet2": {
			"Type": "String",
			"Default": "10.0.30.0/24",
			"Description": "Provide a network CIDR for HASyncSubnet2"
		},
		"HAMgmtSubnet2": {
			"Type": "String",
			"Default": "10.0.40.0/24",
			"Description": "Provide a network CIDR for HAMgmtSubnet2"
		},
		"TgwAttachSubnets": {
			"Type": "String",
			"Description": "Select Yes if you plan to attach this VPC to Transit GW with a VPC attachment.  If Yes is selected 2 additional subnets and a route table will be created",
			"Default": "No",
			"AllowedValues": [
				"Yes",
				"No"
			]
		},
		"TgwAttachSubnet1": {
			"Type": "String",
			"Default": "10.0.5.0/24",
			"Description": "Provide a network CIDR for TgwAttachSubnet1"
		},
		"TgwAttachSubnet2": {
			"Type": "String",
			"Default": "10.0.50.0/24",
			"Description": "Provide a network CIDR for TgwAttachSubnet2"
		}
	},
	"Conditions": {
		"CreateTgwAttachSubnets": {
			"Fn::Equals": [
				{
					"Ref": "TgwAttachSubnets"
				},
				"Yes"
			]
		}
	},
	"Resources": {
		"VPCID": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"VPC"
								]
							]
						}
					}
				]
			}
		},
		"PublicSub1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet1"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PublicSubnet1"
								]
							]
						}
					}
				]
			}
		},
		"PrivateSub1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet1"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PrivateSubnet1"
								]
							]
						}
					}
				]
			}
		},
		"HASyncSub1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "HASyncSubnet1"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"HASyncSubnet1"
								]
							]
						}
					}
				]
			}
		},
		"HAMgmtSub1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "HAMgmtSubnet1"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"HAMgmtSubnet1"
								]
							]
						}
					}
				]
			}
		},
		"PublicSub2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet2"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PublicSubnet2"
								]
							]
						}
					}
				]
			}
		},
		"PrivateSub2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet2"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PrivateSubnet2"
								]
							]
						}
					}
				]
			}
		},
		"HASyncSub2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "HASyncSubnet2"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"HASyncSubnet2"
								]
							]
						}
					}
				]
			}
		},
		"HAMgmtSub2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "HAMgmtSubnet2"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"HAMgmtSubnet2"
								]
							]
						}
					}
				]
			}
		},
		"TgwAttachSub1": {
			"Type": "AWS::EC2::Subnet",
			"Condition": "CreateTgwAttachSubnets",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "TgwAttachSubnet1"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"TgwAttachSubnet1"
								]
							]
						}
					}
				]
			}
		},
		"TgwAttachSub2": {
			"Type": "AWS::EC2::Subnet",
			"Condition": "CreateTgwAttachSubnets",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"CidrBlock": {
					"Ref": "TgwAttachSubnet2"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"TgwAttachSubnet2"
								]
							]
						}
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"IGW"
								]
							]
						}
					}
				]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PublicRouteTable"
								]
							]
						}
					}
				]
			}
		},
		"PrivateRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PrivateRouteTable"
								]
							]
						}
					}
				]
			}
		},
		"TgwAttachRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Condition": "CreateTgwAttachSubnets",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"TgwAttachRouteTable"
								]
							]
						}
					}
				]
			}
		},
		"Route1": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"SubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSub1"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSub2"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation3": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "HAMgmtSub1"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation4": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "HAMgmtSub2"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation5": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PrivateSub1"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation6": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PrivateSub2"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation7": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "HASyncSub1"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation8": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "HASyncSub2"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation9": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Condition": "CreateTgwAttachSubnets",
			"Properties": {
				"SubnetId": {
					"Ref": "TgwAttachSub1"
				},
				"RouteTableId": {
					"Ref": "TgwAttachRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation10": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Condition": "CreateTgwAttachSubnets",
			"Properties": {
				"SubnetId": {
					"Ref": "TgwAttachSub2"
				},
				"RouteTableId": {
					"Ref": "TgwAttachRouteTable"
				}
			}
		},
		"S3Endpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Properties": {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": "*",
							"Action": [
								"s3:GetObject"
							],
							"Resource": [
								"*"
							]
						}
					]
				},
				"RouteTableIds": [
					{
						"Ref": "PublicRouteTable"
					}
				],
				"ServiceName": {
					"Fn::Sub": "com.amazonaws.${AWS::Region}.s3"
				},
				"VpcId": {
					"Ref": "VPCID"
				}
			}
		}
	}
}